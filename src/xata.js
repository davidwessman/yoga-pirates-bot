// Generated by Xata Codegen 0.18.0. Please do not edit.
const {
  BaseClientOptions,
  buildClient,
  SchemaInference,
  XataRecord,
} = require("@xata.io/client");
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "log",
    columns: [
      {
        name: "creationDate",
        type: "datetime",
        notNull: true,
        defaultValue: "2022-05-01T18:11:36.126Z",
      },
      {
        name: "logDate",
        type: "datetime",
        notNull: true,
        defaultValue: "2022-05-01T18:11:36.126Z",
      },
      { name: "description", type: "text" },
      {
        name: "discordUserId",
        type: "string",
        notNull: true,
        defaultValue: "",
      },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Queen-Raae-Workspace-edpk3k.eu-west-1.xata.sh/db/yoga-pirates",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient({ fetch: fetch });
  return instance;
};

exports.XataClient = XataClient;
exports.getXataClient = getXataClient;
